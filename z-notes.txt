
 <xsl:template match="plus"><plus><xsl:apply-templates/></plus></xsl:template>

<xsl:template match="minus"><minus><xsl:apply-templates/></minus></xsl:template>

 <xsl:template match="times">
     <xsl:choose>
        <xsl:when test="name(*[1]) = 'const'">
         <times>
         <const><xsl:value-of select="*[1]"/></const>
          <xsl:apply-templates/>
         </times>
        </xsl:when>
         <xsl:when test="name(*[1]) != 'const' and name(*[last()]) != 'const'">
         <plus>
         <times>
         <xsl:copy-of select="*[1]"/>
          <xsl:apply-templates select="*[last()]"/>
         </times>
         <times>
         <xsl:copy-of select="*[last()]"/>
          <xsl:apply-templates select="*[1]"/>
         </times>
         </plus>
        </xsl:when>
        </xsl:choose>    

  </xsl:template>

<xsl:template match="division">
  <xsl:apply-templates/>
</xsl:template>

<xsl:template match="power">
  <times>
    <xsl:copy-of select="*[last()]"/> 
    
      <xsl:choose>
        <xsl:when test="name(*[last()]) != 'const'">
          <power>
              <xsl:copy-of select="*[1]"/>
              <minus>
                <xsl:copy-of select="*[last()]"/>
                <const>1</const>
              </minus>
          </power>
        </xsl:when>
        <xsl:when test="name(*[last()]) = 'const' and *[last()]>2">
          <power>
                <xsl:copy-of select="*[1]"/>
                <const><xsl:value-of select="*[last()] -1"/></const>
          </power>
        </xsl:when>
        <xsl:when test="name(*[last()]) = 'const' and *[last()]=2">
            <xsl:copy-of select="*[1]"/>
        </xsl:when>
      <xsl:when test="name(*[last()]) = 'const' and *[last()]=1">  
          </xsl:when>
        <xsl:otherwise>
               <xsl:apply-templates/>  
        </xsl:otherwise>
      </xsl:choose> 
    </times>
</xsl:template>

 <xsl:template match="const"> </xsl:template>

 <xsl:template match="const-derivate"><const>0</const></xsl:template>


<xsl:template match="var"> </xsl:template>


          <xsl:apply-templates select="*[last()]"/>



      <!---la derivada de una constante por una funcion es la constante por la derivada-->
        <xsl:when test="name(*[1]) = 'const'">
         <times>
         <xsl:copy-of select="*[1]"/>
          <xsl:apply-templates/>
         </times>
        </xsl:when>